Task1: Create an abstract Shape class.
1. Implement both the Triangle and the Circle after extending from that Shape abstract class.
2. Consider adding both the perimeter and area behavior to the circle and the triangle.
--------------------
Exercise 2: Payment Processing System
Task:
Create an abstract class named Payment with:

Fields for amount and transactionId.
An abstract method void processPayment().
A concrete method void showPaymentDetails() that prints the transaction ID and amount.
Create subclasses:

CreditCardPayment with additional fields for cardNumber and cardHolderName. Implement processPayment() to print "Processing credit card payment for [cardHolderName]".
PayPalPayment with an additional field for email. Implement processPayment() to print "Processing PayPal payment for [email]".
Create a Main class to:

Instantiate objects for both payment methods.
Call showPaymentDetails() and processPayment().
-----------------------


Task 3: Payment Gateway System
Objective: Implement multiple payment methods using an interface.

Requirements:
Create an interface PaymentGateway with the following methods:

void processPayment(double amount)
void refundPayment(double amount)
Create the following classes that implement the PaymentGateway interface:

CreditCardPayment: Prints messages for processing and refunding a payment using credit cards.
PayPalPayment: Prints messages for processing and refunding a payment using PayPal.
Write a Main class to:

Create instances of CreditCardPayment and PayPalPayment.
Call processPayment() and refundPayment() for both payment types
